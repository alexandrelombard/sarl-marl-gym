/** 
 * 
 */
package fr.ciadlab.lanechange

import fr.ciadlab.lanechange.env.MultilaneRoadFactory
import io.sarl.core.Destroy
import io.sarl.core.Initialize
import io.sarl.core.Logging
import fr.ciadlab.lanechange.env.Vehicle
import fr.ciadlab.lanechange.^agent.DriverAgent
import io.sarl.core.Lifecycle
import io.sarl.core.Schedules
import io.sarl.core.DefaultContextInteractions
import fr.ciadlab.gym.TimeSimulationStep
import fr.ciadlab.lanechange.env.LaneChangeEnvironment

/** 
 * Initializes the simulation
 * @author Alexandre Lombard
 * 
 */
agent BootAgent {
	uses Lifecycle, Schedules, DefaultContextInteractions

	on Initialize {
		val vehiclesCount = 1
		
		val environment = new LaneChangeEnvironment(vehiclesCount)
		
		// Load the agents
		for (var i = 0; i < vehiclesCount; i++) {
			val vehicle = environment.vehicles.get(i)
			
			spawn(typeof(DriverAgent), vehicle)
		}
		
		// Schedule execution
		every(100.milliseconds) [
			environment.step
			
			emit(new TimeSimulationStep(0.1))
		]
	}

	on Destroy {
		//
	}
}
